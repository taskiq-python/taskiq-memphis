name: Testing package

on: push

jobs:
  lint:
    strategy:
      matrix:
        cmd:
          - black
          - flake8
          - isort
          - mypy
          - autoflake
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: "poetry"
      - name: Install deps
        run: poetry install
      - name: Run lint check
        run: poetry run pre-commit run -a ${{ matrix.cmd }}
  pytest:
    services:
      memphis-metadata:
        image: memphisos/memphis-metadata:15-docker
        ports:
          - '5005:5005'
        env:
          POSTGRESQL_USERNAME: "memphis"
          POSTGRESQL_PASSWORD: "memphis"
          POSTGRESQL_DATABASE: "memphis"
          POSTGRESQL_PORT_NUMBER: 5005
      memphis:
        image: "memphisos/memphis:stable"
        ports:
          - "9000:9000"
          - "6666:6666"
          - "7770:7770"
        env:
          ROOT_PASSWORD: "memphis"
          ANALYTICS: true
          USER_PASS_BASED_AUTHL: true
          CONNECTION_TOKEN: "memphis"
          METADATA_DB_HOST: "memphis-metadata"
          
      memphis-rest-gateway:
        image: "memphisos/memphis-rest-gateway:latest"
        ports:
          - "4444:4444"
        env:
          JWT_SECRET: "JWT_TEST_PURPOSE"
          REFRESH_JWT_SECRET: "REFRESH_JWT_TEST_PURPOSE"
          USER_PASS_BASED_AUTH: true
          CONNECTION_TOKEN: "memphis"
          ROOT_USER: "root"
          ROOT_PASSWORD: "memphis"
          MEMPHIS_HOST: "127.0.0.1"
          HTTP_PORT: 4444
    permissions:
      checks: write
      pull-requests: write
      contents: write
    strategy:
      matrix:
        py_version: ["3.7", "3.8", "3.9", "3.10"]
        os: [ubuntu-latest]
    runs-on: "${{ matrix.os }}"
    steps:
      - uses: actions/checkout@v2
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "${{ matrix.py_version }}"
          cache: "poetry"
      - name: Install deps
        run: poetry install
      - name: Run pytest check
        run: poetry run pytest -vv -n auto --cov="taskiq_memphis" .
      - name: Generate report
        run: poetry run coverage xml
      - name: Upload coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v3
        if: matrix.os == 'ubuntu-latest' && matrix.py_version == '3.9'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          verbose: true
